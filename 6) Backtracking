//Backtracking

#include<stdio.h>

int safe(int n,int a[n][n],int r,int c)
{
    int i,j;
    for(i=0;i<c;i++)
    {
        if(a[r][i])
            return 0;
    }
    for(i=r,j=c;i>=0 && j>=0;i--,j--)
    {
        if(a[i][j])
            return 0;
    }
    for(i=r,j=c;i<n && j>=0;i++,j--)
    {
        if(a[i][j])
            return 0;
    }
    return 1;
}
void display(int n,int a[n][n])
{
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
            printf("%d ",a[i][j]);
        printf("\n");
    }  
}
int place(int n,int a[n][n],int c)
{
    if(c>=n)
        return 1;
    for(int i=0;i<n;i++)
    {
        if(safe(n,a,i,c))
        {
            a[i][c]=1;
            if(place(n,a,c+1))
                return 1;
            a[i][c]=0;
        }
    }
    return 0;
    //display(n,a);
}
int main()
{
    int n;
    scanf("%d",&n);
    int a[n][n];
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            a[i][j]=0;
    if(place(n,a,0)==0)
        printf("No solution");
    else
        display(n,a);
    return 0;
}
